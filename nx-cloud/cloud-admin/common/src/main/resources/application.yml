spring:
  http:
    messages:
      encoding: UTF-8
  servlet:
    multipart:
      maxFileSize: 1024MB
      maxRequestSize: 1024MB
  freemarker:
    template-loader-path: classpath:/templates/ #模板加载路径 按需配置
    charset: UTF-8
  redis:
    timeout: 2000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  jms:
    pub-sub-domain: true
    cache:
      enabled: false
  activemq:
    in-memory: false
    pool:
      enabled: false
    packages:
      trust-all: true
      trusted: com.hotent.activemq.model,com.hotent.base.jms,java.util,java.lang #信任所有的包
  messages:
    basename: i18n/messages
    encoding: UTF-8
  banner:
    charset: UTF-8
  cloud:
    bootstrap.enabled: true  #Bootstrap开启
  config:
    use-legacy-processing: true  #Bootstrap开启
  main:
    allow-bean-definition-overriding: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  autoconfigure:
    exclude: com.nx.boot.config.Swagger3Config

# 服务端端口
server:
  port: 8088
  address: 0.0.0.0
  sessionTimeout: 30
  undertow:
    accesslog:
      dir: /logs/
      enabled: true
      pattern: common
      prefix: access_log
      suffix: log
    max-http-post: 0
    io-threads: 2 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    worker-threads: 30 # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    buffer-size: 1024 # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理,每块buffer的空间大小,越小的空间被利用越充分
    direct-buffers: true    # 是否分配的直接内存
  compression:
    enabled: true
    mime-types: "text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json"
    min-response-size: 1024
  servlet:
    context-path: /
    session:
      timeout: 30
    encoding:
      enabled: true
      force: true
      charset: UTF-8


# 配置打印SQL语句
logging:
  config: classpath:logback-spring.xml
  level:
    com.hotent.uc.dao: debug
  eiffel-logs:
    storeType: slf4j #mongodb,slf4j,serverLogs
    file: classpath:eiffel-bussiness-logs.logs
    Level: info
    serverUri: ''
    accessToken: ''
    secret: ''


management:
  # 忽略ldap的健康检查
  health:
    LDAP.enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true
  endpoint:
    health:
      show-details: always
    #我们可以选择性的开启、关闭对应的节点
    #management.endpoint.{节点名字}.enabled=false
  server:
    add-application-context-header: false

info:
  app:
    encoding: "UTF-8"
    java:
      source: "1.8"
      target: "1.8"

mybatis-plus:
  configuration:
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'

mybatis:
  typeAliasesPackage: com.hotent.base.db.model,com.hotent.**.*.entity
  mapperLocations: classpath*:mapper/*/*.xml,classpath*:mapper/*.xml
  typeHandlersPackage: com.hotent.base.db.typehandle
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# token生成配置
jwt:
  header: Authorization
  secret: mySecret
  single: false # 单用户登录
  expiration: 86400 # 单位秒
  route:
    authentication:
      path: auth
      refresh: refresh

# 系统中发送邮件的账号
mail:
  host: smtp.email.com
  port: 25
  ssl: false
  nickName: "eip7管理员"
  username: username@email.com
  password: password

system: # 系统ID生成种子
  id:
    datacenterId: 1 # 数据中心ID，取值范围为0-31
    workerId: 1 # 服务器ID，取值范围为0-31
  bpm.engineName: eip7
  saas: # 多租户
    enable: true # 是否开启多租户模式，注意：非租户模式和租户模式下数据有差异性，切换后可能导致数据异常
    ignoreTables:  # 忽略租户隔离的物理表名
  groovy:
    enabled: true
  redis:
    enabled: true
  seata:
    enabled: false
  jms: # 是否启用队列，默认的队列名和订阅名
    producer:
      enabled: true
      queue: eipQueue
      topic: eipTopic
    consumer:
      enabled: true #说明该应用是消费者
      queue: eipTopic
      topic: eipQueue
  url:
    bpm-runtime: http://localhost:8088/
    bpm-model: http://localhost:8088/
    form: http://localhost:8088/
    portal: http://localhost:8088/
    uc: http://localhost:8088/
  cross:
    enabled: true
    allowOrigin: "httt://localhost:8088"
    whiteListDomain: "localhost,127.0.0.1"
    whiteListPort: "1080,8080,80,8081,8082"
  logs:
    - x7plus-standalone: true
    - x7plus-uc: true
    - x7plus-form: true
    - x7plus-portal: true
    - x7plus-bpm-runtime: true
    - x7plus-bpm-model: true


file:
  conver.path: /home/eip/conver/
  conver.path.clean-schedule.enabled: true
  conver.converted.file.charset: utf-8
  office.home: /opt/openoffice4
  simText: txt,html,xml,java,properties,sql
  media: mp3,mp4,flv,rmvb,wmv
  preview.domain: http://www.hotent.xyz:8088
  attachment:
    path: /home/eip/file
    type: database
  portrait: #由system.attachment.改过来
    path: /home/eip/attachment
    type: folder
  ftp:
    url: ''
    port: 21
    username: ''
    password: ''


# 单点登录配置
sso:
  enable: true
  mode: jwt # jwt cas oauth
  cas:
    url: http://www.hotent.org:7080/cas #CAS服务地址
  oauth:
    url: http://192.168.1.211:8093 #oauth2服务地址
    loginPath: /oauth/authorize
    tokenPath: /oauth/token
    checkPath: /oauth/check_token
    clientId: eip7
    secret: flossy


# 注册中心
eureka:
  client:
    healthcheck:
      enabled: true
  instance:
    lease-expiration-duration-in-seconds: 30
    lease-renewal-interval-in-seconds: 10
    prefer-ip-address: true # 注册到eureka时使用ip地址
    instance-id: ${spring.cloud.client.ip-address}:${server.port}  # eureka会自动识别每个微服务的ip地址，如果需要指定ip则配置该属性


# feign配置
feign:
  sentinel:
    enabled: true
  hystrix:
    enabled: false
  httpclient:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 50000
        readTimeout: 50000
        loggerLevel: full

# 断路器配置
hystrix:
  metrics:
    enabled: true
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE # THREAD  SEMAPHORE
          semaphore:
            maxConcurrentRequests: 200 # 默认情况下下面两个值都是10，也就是超过10个的并发会直接进入fallback方法，不会去真正请求
          thread:
            timeoutInMilliseconds: 50000 #缺省为1000
      fallback:
        isolation:
          semaphore:
            maxConcurrentRequests: 200 # 默认情况下下面两个值都是10，也就是超过10个的并发会直接进入fallback方法，不会去真正请求

# 负载均衡配置
ribbon:
  eureka:
    enabled: true

swagger:
  enable: true
  application-name: ${spring.application.name}
  application-version: ${spring.profiles.version}
  application-description: ${spring.profiles.description}
  try-host: http://${spring.cloud.client.ip-address}:${server.port}
  groups:
    - group_bpm: '工作流'
    - group_form: '表单'
    - group_uc: '用户中心'
    - group_portal: '门户'
    - feign-api: 'feign接口'