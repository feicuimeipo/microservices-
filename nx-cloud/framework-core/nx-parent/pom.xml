<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.nx.cloud</groupId>
        <artifactId>nx-dependencies</artifactId>
        <version>0.9.9</version>
        <relativePath>../nx-dependencies</relativePath>
    </parent>

    <artifactId>nx-parent</artifactId>
    <name>${project.artifactId}</name>
    <description></description>
    <packaging>pom</packaging>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <scm>
        <url>http://gitlab.nx.com/java-developer/nx-cloud-architecture</url>
        <connection></connection>
        <developerConnection></developerConnection>
    </scm>

    <properties>
        <main.basedir>${basedir}/..</main.basedir>
        <checkstyle.dir>${main.basedir}</checkstyle.dir>
        <checkstyle.skip>true</checkstyle.skip>
        <checkstyle.failOnViolation>false</checkstyle.failOnViolation>
        <maven.deploy.skip>false</maven.deploy.skip>
        <maven.test.skip>false</maven.test.skip>
        <maven.version>3.1.1</maven.version>


        <java.version>1.8</java.version> <!-- 文件拷贝时的编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
        <developer.organization><![CDATA[org.nianxi]]></developer.organization>

        <nohttp-checkstyle.version>0.0.10</nohttp-checkstyle.version>
        <spring-javaformat.version>0.0.29</spring-javaformat.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>

        <spotbugs.version>4.2.0</spotbugs.version>
        <pmd.version>3.11.0</pmd.version>
    </properties>

    <!-- Generally Useful Test Dependencies -->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
			<!--<scope>provided</scope>-->
        </dependency>
    </dependencies>

    <developers>
        <developer>
            <name>cc-pharmcube</name>
            <url>http://www.nx.com/</url>
            <email>xlnian@163.com</email>
        </developer>
    </developers>


    <build>

    <pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>Saxon-HE</artifactId>
                        <version>9.9.1-3</version>
                    </dependency>

                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.41.1</version>
                    </dependency>

                    <!--确保程序里不存在http, 只使用https://-->
                    <dependency>
                        <groupId>io.spring.nohttp</groupId>
                        <artifactId>nohttp-checkstyle</artifactId>
                        <version>${nohttp-checkstyle.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>2.4</version>
            </plugin>
        </plugins>
    </pluginManagement>

    <plugins>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven-checkstyle-plugin.version}</version>
            <executions>
                <execution>
                    <id>checkstyle-validation</id>
                    <phase>validate</phase>
                    <configuration>
                        <consoleOutput>false</consoleOutput>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <skip>${checkstyle.skip}</skip>
                        <failOnViolation>${checkstyle.failOnViolation}</failOnViolation>
                        <configLocation>${checkstyle.dir}/tools/checkstyle/checkstyle.xml</configLocation>
                        <suppressionsLocation>${checkstyle.dir}/tools/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
                        <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    </configuration>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
                <execution>
                    <id>nohttp-checkstyle-validation</id>
                    <phase>validate</phase>
                    <configuration>
                        <skip>${checkstyle.skip}</skip>
                        <configLocation>${checkstyle.dir}/tools/nohttp/checkstyle.xml</configLocation>
                        <suppressionsLocation>${checkstyle.dir}/tools/nohttp/suppressions.xml</suppressionsLocation>
                        <rulesFiles>${checkstyle.dir}/tools/nohttp/allowlist.lines</rulesFiles>
                        <propertyExpansion>checkstyle.dir=${checkstyle.dir}</propertyExpansion>
                        <sourceDirectories>./</sourceDirectories>
                        <includes>**/*</includes>
                        <excludes>.git/**/*,target/**/*</excludes>
                    </configuration>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>

            </executions>

        </plugin>

        <!--依赖检查-->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
                <execution>
                    <id>enforce-rules</id>
                    <goals>
                        <goal>enforce</goal>
                    </goals>
                    <configuration>
                        <rules>
                            <requireJavaVersion>
                                <version>[1.8,)</version>
                            </requireJavaVersion>
                            <requireProperty>
                                <property>main.basedir</property>
                            </requireProperty>
                            <requireProperty>
                                <property>project.organization.name</property>
                            </requireProperty>
                            <requireProperty>
                                <property>project.name</property>
                            </requireProperty>
                            <requireProperty>
                                <property>project.description</property>
                            </requireProperty>
                        </rules>
                        <fail>true</fail>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
                <excludes>
                    <exclude>**/Thumbs.db</exclude>
                </excludes>
                <archive>
                    <manifest>
                        <addClasspath>true</addClasspath>
                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                    </manifest>
                    <manifestEntries>
                        <Specification-Title>${project.name}</Specification-Title>
                        <Specification-Version>${project.version}</Specification-Version>
                        <Implementation-Title>${project.name}</Implementation-Title>
                        <Implementation-Version>${project.version}</Implementation-Version>
                        <Built-By>NianXiaoLing(xlnian@163.com)</Built-By>
                    </manifestEntries>
                </archive>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
                <testFailureIgnore>true</testFailureIgnore>

                <argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
                <encoding>${project.build.sourceEncoding}</encoding>
                <includes>
                    <include>**/*Tests.java</include>
                    <include>**/*Test.java</include>
                    <include>**/Test*.java</include>
                    <include>**/*TestCase.java</include>
                </includes>
                <excludes>
                    <exclude>**/Abstract*.java</exclude>
                </excludes>
                <systemPropertyVariables>
                    <java.security.egd>file:/dev/./urandom</java.security.egd>
                    <java.awt.headless>true</java.awt.headless>
                </systemPropertyVariables>
                <argLine>-Xmx1024m</argLine>
                <trimStackTrace>false</trimStackTrace>
            </configuration>

            <!--
            <argLine>-Xmx200m -Dcatalina.home=unknown -Djava.io.tmpdir=${project.basedir}/target/tmp</argLine>
            -->
        </plugin>

	    <!--
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>f
            <artifactId>maven-source-plugin</artifactId>
            <executions>
                <execution>
                    <id>attach-sources</id>
                    <goals>
                        <goal>jar-no-fork</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
		-->

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>${maven-deploy-plugin.version}</version>
            <configuration>
                <skip>${maven.deploy.skip}</skip>
            </configuration>
        </plugin>


        <!-- docker -->
        <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.4.13</version>
            <configuration>
                <!-- made of '[a-z0-9-_.]' -->
                <imageName>${project.artifactId}:${project.version}</imageName>
                <dockerDirectory>${project.basedir}</dockerDirectory>
                <resources>
                    <resource>
                        <targetPath>/</targetPath>
                        <directory>${project.build.directory}</directory>
                        <include>${project.build.finalName}.jar</include>
                    </resource>
                </resources>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.1.0</version>
        </plugin>

        <!--此插件用于获取当前时区当前时间， maven.build.timestamp为非当前时区的时间，故用插件。-->
        <plugin><!--${current.time}-->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
                <execution>
                    <id>timestamp-property</id>
                    <goals>
                        <goal>timestamp-property</goal>
                    </goals>
                    <configuration>
                        <name>current.time</name>
                        <pattern>yyyyMMdd-HHmmss</pattern>
                        <timeZone>GMT+8</timeZone>
                    </configuration>
                </execution>
            </executions>
        </plugin>


        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.10.0</version>
            <configuration>
                <source>${java.version}</source>
                <target>${java.version}</target>
                <encoding>${project.build.sourceEncoding}</encoding>
                <verbose>false</verbose>
                <showWarnings>true</showWarnings>
                <fork>true</fork>
                <annotationProcessorPaths>
                    <path>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok</artifactId>
                        <version>${lombok.version}</version>
                    </path>
                    <path>
                        <groupId>com.google.auto.service</groupId>
                        <artifactId>auto-service</artifactId>
                        <version>${auto-service.version}</version>
                    </path>
                </annotationProcessorPaths>
            </configuration>
        </plugin>


        <!-- 让配置文件可以读取pom中的信息 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${maven-resources-plugin.version}</version>
            <dependencies>
                <dependency>
                    <groupId>org.apache.maven.shared</groupId>
                    <artifactId>maven-filtering</artifactId>
                    <version>3.2.0</version>
                </dependency>
            </dependencies>
            <configuration>
                <encoding>${project.build.sourceEncoding}</encoding>
                <nonFilteredFileExtensions>
                    <nonFilteredFileExtension>bpmn</nonFilteredFileExtension>
                    <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                </nonFilteredFileExtensions>
                <delimiters>
                    <delimiter>@*@</delimiter>
                </delimiters>
                <useDefaultDelimiters>false</useDefaultDelimiters>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
                <execution>
                    <id>default-prepare-agent</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>check</id>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
                <execution>
                    <id>default-report</id>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>
            <!-- Configuration 里面写配置信息 -->
            <configuration>
                <rules>
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                        <element>BUNDLE</element>
                        <limits>
                            <limit implementation="org.jacoco.report.check.Limit">
                                <counter>METHOD</counter>
                                <value>COVEREDRATIO</value>
                                <minimum>0.10</minimum>
                            </limit>
                            <limit implementation="org.jacoco.report.check.Limit">
                                <counter>INSTRUCTION</counter>
                                <value>COVEREDRATIO</value>
                                <minimum>0.10</minimum>
                            </limit>
                            <limit implementation="org.jacoco.report.check.Limit">
                                <counter>LINE</counter>
                                <value>COVEREDRATIO</value>
                                <minimum>0.10</minimum>
                            </limit>
                            <limit implementation="org.jacoco.report.check.Limit">
                                <counter>CLASS</counter>
                                <value>MISSEDCOUNT</value>
                                <maximum>100</maximum>
                            </limit>
                        </limits>
                    </rule>
                </rules>
            </configuration>
        </plugin>
    </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.properties</include>
                    <include>*.yml</include>
                    <include>*.yaml</include>
                    <include>*.xml</include>
                    <include>*.ftl</include>
                    <include>*.jsp</include>
                    <include>*.html</include>
                    <include>*.htm</include>
                    <include>*.vm</include>
                    <include>*.conf</include>
                </includes>
            </resource>

            <resource>
                <directory>${project.basedir}</directory>
                <filtering>true</filtering>
                <includes>
                    <include>Dockerfile</include>
                    <include>*.sh</include>
                </includes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>

    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>check</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>



            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>

    </reporting>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.7</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>



    <distributionManagement>
        <repository>
            <id>rdc-releases</id>
            <name>Nexus Release Repository</name>
            <url>https://packages.aliyun.com/maven/repository/2100575-release-lnqT5Q/</url>
        </repository>
        <snapshotRepository>
            <id>rdc-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>https://packages.aliyun.com/maven/repository/2100575-snapshot-UflNGE/</url>
        </snapshotRepository>
    </distributionManagement>


    <repositories>

        <repository>
            <id>central</id>
            <url>https://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>snapshots</id>
            <url>https://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>rdc-releases</id>
            <url>https://packages.aliyun.com/maven/repository/2100575-release-lnqT5Q/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>rdc-snapshots</id>
            <url>https://packages.aliyun.com/maven/repository/2100575-snapshot-UflNGE/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>snapshots</id>
            <url>https://maven.aliyun.com/nexus/content/groups/public</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>rdc-releases</id>
            <url>https://packages.aliyun.com/maven/repository/2100575-release-lnqT5Q/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>rdc-snapshots</id>
            <url>https://packages.aliyun.com/maven/repository/2100575-snapshot-UflNGE/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>

    </pluginRepositories>

</project>