name: Performance Tests

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  TERM: xterm-256color
  GRADLE_BUILDCACHE_USER: ci
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  PYTHON_VERSION: 3.10.2
  JDK_CURRENT: 11

##########################################################################

on:
  schedule:
    - cron: "0 0 * * *"
#on:
#  push:
#    branches:
#      - master
#      - '!**.**.**'
#  pull_request:
#    types: [ labeled ]
#    branches:
#      - master
#      - '!**.**.**'

##########################################################################

jobs:
  cancel-previous-runs:
    if: ${{ (github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') && !contains(github.event.head_commit.message, 'ci:minimal') }}
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

  initialize:
    runs-on: ubuntu-latest
    needs: [cancel-previous-runs]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'temurin'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#      - name: Gradle Wrapper Validation
#        uses: gradle/wrapper-validation-action@v1
      - name: Initialize
        run: ls ./ci && chmod -R +x ./ci/**/*.sh && ./ci/init-build.sh

##########################################################################
  cache:
    runs-on: ubuntu-latest
    needs: [initialize]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'temurin'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#      - name: Gradle Wrapper Validation
#        uses: gradle/wrapper-validation-action@v1
      - name: Initialize
        run: chmod -R +x ./ci/**/*.sh && ./ci/init-build.sh
      - uses: actions/checkout@v3
      - name: Download Dependencies
        run: ./gradlew --build-cache --configure-on-demand --no-daemon downloadDependencies --parallel --refresh-dependencies
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
  tests-performance-locust:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        category:
          - tomcat
          - jetty
          - undertow
    name: locust - ${{ matrix.category }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'temurin'
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#      - name: Gradle Wrapper Validation
#        uses: gradle/wrapper-validation-action@v1
      - name: Initialize
        run: chmod -R +x ./ci/**/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Locust Performance Tests
        run: ./ci/tests/perf/perftests-locust.sh ${{ matrix.category }}

##########################################################################

  tests-performance-jmeter:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        category:
          - tomcat
          - jetty
          - undertow
    name: jmeter - ${{ matrix.category }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'temurin'
      - name: Initialize
        run: chmod -R +x ./ci/**/*.sh && ./ci/init-build.sh
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#      - name: Gradle Wrapper Validation
#        uses: gradle/wrapper-validation-action@v1
      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: JMeter CAS Performance Tests
        run: ./ci/tests/perf/perftests-jmeter.sh ${{ matrix.category }} cas
      - name: JMeter OIDC Performance Tests
        run: ./ci/tests/perf/perftests-jmeter.sh ${{ matrix.category }} oidc
      - name: JMeter SAML2 Performance Tests
        run: ./ci/tests/perf/perftests-jmeter.sh ${{ matrix.category }} saml
##########################################################################
