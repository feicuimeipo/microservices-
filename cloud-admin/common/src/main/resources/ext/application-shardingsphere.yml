spring:
  shardingsphere:
    # 参数配置，显示sql
    enabled: false
    props:
      sql.show: true
    # 配置数据源
    datasource:
      # 给每个数据源取别名，record*
      names: db1,db2
      db1:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: @datasource.url@
        username: @datasource.username@
        password: @datasource.password@
        maxPoolSize: 100
        minPoolSize: 5
      db2:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: @datasource.url@
        username: @datasource.username@
        password: @datasource.password@
        maxPoolSize: 100
        minPoolSize: 5
    # 配置默认数据源ds1
    sharding:
      master-slave-rules: #配置数据源的读写分离，但是数据库一定要做主从复制
        ms: # 配置主从名称，可以任意取名字
          master-data-source-name: db1 # 配置主库master，负责数据的写入
          slave-data-source-names: db2  # 配置从库slave节点
          load-balance-algorithm-type: round_robin # 配置slave节点的负载均衡均衡策略，采用轮询机制
      default-data-source-name: ms #默认数据源，主要用于写，注意一定要配置读写分离 ,注意：如果不配置，那么就会把三个节点都当做从slave节点，新增，修改和删除会出错。
      #tables: #配置分表的规则
      #  ps_seal_log:
      #    actual-data-nodes: ms.ps_seal_log_$->{2020..2021}${(1..12).collect{t ->t.toString().padLeft(2,'0')} }
      #    table-strategy:
      #      standard:
      #        shardingColumn: action_time
      #        preciseAlgorithmClassName: com.hotent.base.db.shardingsphere.DatePreciseShardingAlgorithm